---
- name: Install pre-req packages
  ansible.builtin.apt:
    name:
      - gpg
    state: present

- name: install maas apt key
  ansible.builtin.apt_key:
    keyserver: keyserver.ubuntu.com
    id: 684D4A1C

- name: configure maas repo
  ansible.builtin.apt_repository:
    repo: ppa:maas/3.1
    state: present
    filename: maas

- name: install maas
  ansible.builtin.package:
    name: maas
    state: present

- name: configure curtin to install python
  ansible.builtin.lineinfile:
    dest: /etc/maas/preseeds/curtin_userdata
    insertafter: "^.*late_commands:"
    line: "  python: ['curtin', 'in-target', '--', 'apt-get', '-y', 'install', 'python']"

- name: configure curtin to install python-lxml
  ansible.builtin.lineinfile:
    dest: /etc/maas/preseeds/curtin_userdata
    insertafter: "^.*python:"
    line: "  python-lxml: ['curtin', 'in-target', '--', 'apt-get', '-y', 'install', 'python-lxml']"

- name: "remove default user creation from cloud config"
  ansible.builtin.lineinfile:
    dest: /etc/maas/preseeds/curtin_userdata
    insertafter: EOF
    line: >
        disable_default_user_01: ["curtin", "in-target", "--", "sh",
        "-c", "sed -ri '/^users:/,+1d' /etc/cloud/cloud.cfg"]
  notify:
    - restart-maas-rackd
    - restart-maas-regiond

- name: "remove default user parameters from cloud config"
  ansible.builtin.lineinfile:
    dest: /etc/maas/preseeds/curtin_userdata
    insertafter: EOF
    line: >
        disable_default_user_02:
        [curtin, in-target, --, sh, -c, sed -ri '/.*# Default user/,+7d' /etc/cloud/cloud.cfg]
  notify:
    - restart-maas-rackd
    - restart-maas-regiond

- name: "configure curtin to allow root login"
  ansible.builtin.lineinfile:
    dest: /etc/maas/preseeds/curtin_userdata
    insertafter: EOF
    line: >
        activate_root:
        ["curtin", "in-target",
        "--", "sh", "-c","sed -i 's/disable_root: true/disable_root: false/' /etc/cloud/cloud.cfg"]
  notify:
    - restart-maas-rackd
    - restart-maas-regiond

- name: "configure curtin to set root password"
  ansible.builtin.lineinfile:
    dest: /etc/maas/preseeds/curtin_userdata
    insertafter: EOF
    line: >
        root_password:
        ["curtin", "in-target", "--", "sh", "-c", "usermod -p
        '$6$rounds=656000$YWRhOGM3ZjVhM2$tRbCWRSgc.dK/fYWlu4BPea338iXSDmrrp.VsIKBfjdDu.xEIzlfwaYHaTyyABYs.Rdyz3gm6BuIES4lFdbSe0'
         root"]
  notify:
    - restart-maas-rackd
    - restart-maas-regiond

- name: "configure curtin to allow reboot host after all cloud configs run"
  ansible.builtin.lineinfile:
    dest: /etc/maas/preseeds/curtin_userdata
    insertafter: EOF
    line: "  power_cycle: [\"curtin\", \"in-target\", \"--\", \"sh\", \"-c\", \"sed -ri '$a power_state:\\\\n   mode: reboot\\\\n   condition: True' /etc/cloud/cloud.cfg\"]"
  notify:
    - restart-maas-rackd
    - restart-maas-regiond

- name: "configure curtin to not manage /etc/hosts"
  ansible.builtin.lineinfile:
    dest: /etc/maas/preseeds/curtin_userdata
    insertafter: EOF
    line: "  unmanaged_etc_hosts: [\"curtin\", \"in-target\", \"--\", \"sh\", \"-c\", \"sed -i 's/manage_etc_hosts: true/manage_etc_hosts: false/' /etc/cloud/cloud.cfg.d/90_dpkg_local_cloud_config.cfg\"]"
  notify:
    - restart-maas-rackd
    - restart-maas-regiond

- name: "enable VNC console for libvirt guests"
  ansible.builtin.lineinfile:
    dest: /usr/lib/python3/dist-packages/provisioningserver/drivers/pod/virsh.py
    insertafter: '.*</graphics>$'
    line: "        <graphics type='vnc' port='-1' autoport='yes' listen='0.0.0.0'/>"
  notify:
    - restart-maas-rackd
    - restart-maas-regiond

- name: Install SSL Key
  ansible.builtin.copy:
    content: "{{ ssl_privkey }}"
    dest: "{{ ssl_keypath }}"
    owner: maas
    group: maas
    mode: 0640
  notify:
    - restart-maas-rackd
    - restart-maas-regiond
  when: maas_use_ssl

- name: Install SSL Certificate Chain
  ansible.builtin.copy:
    content: "{{ ssl_certchain }}"
    dest: "{{ ssl_certpath }}"
    owner: maas
    group: maas
    mode: 0640
  notify:
    - restart-maas-rackd
    - restart-maas-regiond
  when: maas_use_ssl

- name: Copy MAAS NGINX config
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /var/lib/maas/http/nginx.conf
    mode: 0755
  notify:
    - restart-maas-rackd
    - restart-maas-regiond
    - restart-maas-http

- name: Add SSL configuration to MAAS Nginx config
  ansible.builtin.blockinfile:
    state: present
    path: /usr/lib/python3/dist-packages/provisioningserver/templates/http/rackd.nginx.conf.template
    block: |
      server {
       listen 443 ssl;
       server_name _;
       ssl_certificate "{{ ssl_certpath }}";
       ssl_certificate_key "{{ ssl_keypath }}";
       {% raw -%}
       {% if upstream_http %}
       location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_buffering off;
        proxy_pass http://maas-regions/;
       }
       location /MAAS/ {
        proxy_pass http://maas-regions/MAAS/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
       }
       location /nginx_status {
        stub_status on;
        access_log   off;
        allow all;
       }
       {% endif %}
      }
      {%- endraw %}
  notify:
    - restart-maas-rackd
    - restart-maas-regiond
    - restart-maas-http
  when: maas_use_ssl

- name: install ipmitool
  ansible.builtin.package:
    name: ipmitool
    state: present

- name: install libvirt-bin
  ansible.builtin.package:
    name: libvirt-bin
    state: present

- name: Set MAAS user shell to /bin/bash
  ansible.builtin.user:
    name: maas
    shell: /bin/bash

- name: Create MAAS ssh directory
  ansible.builtin.file:
    path: /var/lib/maas/.ssh
    state: directory
    owner: maas
    mode: 0600

- name: Copy SSH Config
  ansible.builtin.copy:
    owner: maas
    mode: 0755
    dest: /var/lib/maas/.ssh/config
    content: |
      StrictHostKeyChecking no
      UserKnownHostsFile /dev/null

- name: Setup SSH Public Key
  ansible.builtin.copy:
    mode: 0600
    owner: maas
    content: "{{ maas_ssh_public_key }}"
    dest: /var/lib/maas/.ssh/id_rsa.pub
  when: maas_ssh_public_key is defined and maas_ssh_public_key != None

- name: Setup SSH Private Key
  ansible.builtin.copy:
    mode: 0600
    owner: maas
    content: "{{ maas_ssh_private_key }}"
    dest: /var/lib/maas/.ssh/id_rsa
  when: maas_ssh_private_key is defined and maas_ssh_private_key != None
